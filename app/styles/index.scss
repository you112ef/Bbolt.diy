@use 'variables.scss';
@use 'z-index.scss';
@use 'animations.scss';
@use 'mobile-touch.scss';
@use 'components/terminal.scss';
@use 'components/resize-handle.scss';
@use 'components/code.scss';
@use 'components/editor.scss';
@use 'components/toast.scss';
@use 'components/chat-workbench-tabs.scss';
@use 'components/enhanced-ui.scss';

html,
body {
  height: 100%;
  width: 100%;
  background: linear-gradient(
    135deg,
    var(--bolt-elements-bg-depth-1) 0%,
    color-mix(in srgb, var(--bolt-elements-bg-depth-1), var(--primary-color) 3%) 50%,
    color-mix(in srgb, var(--bolt-elements-bg-depth-1), var(--secondary-color) 2%) 100%
  );
  background-attachment: fixed;
}

:root {
  --gradient-opacity: 0.6;
  /* Enhanced transparent gradient palette */
  --primary-color: rgba(56, 189, 248, var(--gradient-opacity));   /* sky-400 */
  --secondary-color: rgba(14, 165, 233, var(--gradient-opacity)); /* sky-500 */
  --accent-color: rgba(6, 182, 212, var(--gradient-opacity));     /* cyan-500 */
  --bg-overlay: rgba(255, 255, 255, 0.02);
  --bg-overlay-dark: rgba(0, 0, 0, 0.05);
  --glass-bg: rgba(255, 255, 255, 0.05);
  --glass-bg-dark: rgba(0, 0, 0, 0.1);
  --blur-strength: 20px;
}

.modern-scrollbar {
  overflow: auto;

  // WebKit scrollbar styling
  &::-webkit-scrollbar {
    width: 3px;
    height: 5px;
  }

  &::-webkit-scrollbar-track {
    background: transparent;
  }

  &::-webkit-scrollbar-thumb {
    // Use CSS variables for colors
    background-color: var(--modern-scrollbar-thumb-background);
    border-radius: 9999px; // pill shape
    border: 2px solid transparent; // for padding-like effect
    background-clip: content-box;
    transition: background-color 0.2s ease-in-out; // Add transition
  }

  &::-webkit-scrollbar-thumb:hover {
    // Use CSS variable for hover color
    background-color: var(--modern-scrollbar-thumb-backgroundHover);
  }

  // Firefox support
  scrollbar-width: thin;
  // Use CSS variables for Firefox colors
  scrollbar-color: var(--modern-scrollbar-thumb-backgroundHover) transparent; // Use hover color for thumb for consistency
}

.modern-scrollbar-invert {
  &::-webkit-scrollbar-thumb {
    // Override with a contrasting color, e.g., primary text color with transparency
    background-color: color-mix(in srgb, var(--bolt-elements-textPrimary), transparent 70%);
  }

  &::-webkit-scrollbar-thumb:hover {
    // Darker/more opaque version on hover
    background-color: color-mix(in srgb, var(--bolt-elements-textPrimary), transparent 50%);
  }

  // Firefox support for inverted colors
  scrollbar-color: color-mix(in srgb, var(--bolt-elements-textPrimary), transparent 50%) transparent;
}

// Enhanced glassmorphism effects
.glass-effect {
  background: var(--glass-bg);
  backdrop-filter: blur(var(--blur-strength));
  -webkit-backdrop-filter: blur(var(--blur-strength));
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.glass-effect-dark {
  background: var(--glass-bg-dark);
  backdrop-filter: blur(var(--blur-strength));
  -webkit-backdrop-filter: blur(var(--blur-strength));
  border: 1px solid rgba(255, 255, 255, 0.05);
}

// Subtle overlay enhancements
.enhanced-overlay {
  position: relative;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      45deg,
      transparent 0%,
      var(--bg-overlay) 50%,
      transparent 100%
    );
    pointer-events: none;
    z-index: 1;
  }
}

/* Global responsive helpers */
*, *::before, *::after {
  box-sizing: border-box;
}

img, video, canvas, svg {
  max-width: 100%;
  height: auto;
  display: block;
}

/* Responsive container */
.container {
  width: 100%;
  margin-inline: auto;
  padding-inline: clamp(12px, 2vw, 24px);
}
@media (min-width: 640px) { .container { max-width: 640px; } }
@media (min-width: 768px) { .container { max-width: 768px; } }
@media (min-width: 1024px) { .container { max-width: 1024px; } }
@media (min-width: 1280px) { .container { max-width: 1280px; } }
@media (min-width: 1536px) { .container { max-width: 1536px; } }

/* Auto-fit grid utility */
.responsive-grid {
  --min-col: 260px;
  display: grid;
  gap: clamp(12px, 2vw, 24px);
  grid-template-columns: repeat(auto-fit, minmax(var(--min-col), 1fr));
}

/* Flex stack on small screens */
.stack-sm {
  display: flex;
  gap: clamp(8px, 2vw, 16px);
}
@media (max-width: 1023.98px) {
  .stack-sm { flex-direction: column; }
}

/* Visibility helpers */
.hide-on-mobile { display: none !important; }
@media (min-width: 640px) { .hide-on-mobile { display: initial !important; } }
.show-on-mobile { display: initial !important; }
@media (min-width: 640px) { .show-on-mobile { display: none !important; } }

/* Scrolling and word wrapping */
.scroll-x-auto { overflow-x: auto; -webkit-overflow-scrolling: touch; }
.break-words { word-wrap: break-word; overflow-wrap: anywhere; }

/* Tables */
:where(table) { width: 100%; border-collapse: collapse; }
:where(td, th) { padding: 0.5rem; }
.table-container { width: 100%; overflow-x: auto; }

/* Fluid typography helpers for headings */
h1.text-fluid { font-size: clamp(1.5rem, 1.2rem + 2vw, 2.25rem); line-height: 1.2; }
h2.text-fluid { font-size: clamp(1.25rem, 1rem + 1.5vw, 1.875rem); line-height: 1.25; }
h3.text-fluid { font-size: clamp(1.125rem, 0.9rem + 1vw, 1.5rem); line-height: 1.3; }

/* Safe area helpers for devices with notches */
@supports (padding: max(0px)) {
  .safe-area {
    padding-left: max(16px, env(safe-area-inset-left));
    padding-right: max(16px, env(safe-area-inset-right));
  }
  .safe-area-top { padding-top: max(0px, env(safe-area-inset-top)); }
  .safe-area-bottom { padding-bottom: max(16px, env(safe-area-inset-bottom)); }
}
